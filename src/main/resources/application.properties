# ======================= Application Information =======================
# Application name
spring.application.name=kikihi
spring.profiles.active=dev

# ======================= Server Configuration =======================
# Server port setting
server.port=9000
# ======================= Database Configuration =======================
# Database connection settings
# H2 ?????? ?? ??
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

#h2 console ??? ? ?? ??
spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE

# ======================= JPA Configuration =======================
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.hibernate.ddl-auto=create

spring.jwt.secret=vmfhaltmskdlstkfkdgodyroqkfwkdbalroqkfwkdbalaaaaaaaaaaaaaaaabbbbb

# ======================= OAuth2.0 Google =======================
# registration ?? ????? ?? ???? ???? ?? ???? ??(??)
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=920651375165-e2im63a0d0n1of6r3ds6s5ahqf9909c6.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
# ???? URI (??? ? ??? URI, Google Cloud Console?? ???? ?)
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:9000/login/oauth2/code/google
# Authorization Grant Type
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
# ??? Scope (???, ??? ?? ??)
spring.security.oauth2.client.registration.google.scope=email,profile


# provider (??? ?? ??? ? ??)-> ??? ???? ???? ????,???? ???? ?


# ======================= OAuth2.0 Naver  =======================
# registration ?? ????? ?? ???? ???? ?? ???? ??(??)
# naver OAuth2 Client ?? (????? ID ? ???)
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=wxRbBAJw9JZZOch9aOef
spring.security.oauth2.client.registration.naver.client-secret=Uud78LARKt
# ???? URI (??? ? ??? URI, naver Cloud Console?? ???? ?)
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:9000/login/oauth2/code/naver
# Authorization Grant Type
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
# ??? Scope (???, ??? ?? ??)
spring.security.oauth2.client.registration.naver.scope=email,name

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=http://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=http://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# ======================= Redis cache  =======================
spring.data.redis.host=localhost
spring.data.redis.port=6379

# springdoc swagger ??
#springdoc.api-docs.enabled=true
#springdoc.swagger-ui.enabled=true
#springdoc.swagger-ui.tags-sorter=alpha
#springdoc.swagger-ui.operations-sorter=alpha
#springdoc.swagger-ui.display-request-duration=true